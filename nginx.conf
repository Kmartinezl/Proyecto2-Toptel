server {
    listen      80;
    listen [::]:80;
    server_name geolocationp2.tk;

    return 301 https://$host$request_uri;
    #location / {
    #        proxy_pass http://web:3000;
    #        proxy_http_version 1.1;
    #        proxy_set_header Upgrade $http_upgrade;
    #        proxy_set_header Connection 'upgrade';
    #        proxy_set_header Host $host;
    #        proxy_cache_bypass $http_upgrade;
    #}

}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name geolocationp2.tk;

    server_tokens off;

    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;

    ssl_buffer_size 8k;

    ssl_dhparam /etc/nginx/ssl/dhparam-2048.pem;

    ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
    ssl_prefer_server_ciphers on;

    ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

    ssl_ecdh_curve secp384r1;
    ssl_session_tickets off;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4;
    
    location / {
            proxy_pass http://nodeapp:3000;
	    proxy_set_header Host $host;
	    proxy_set_header X-Real-IP $remote_addr;
	    proxy_set_header X-Forwarded-Proto https;
    }

}

